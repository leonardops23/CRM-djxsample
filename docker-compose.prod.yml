version: '3.8'

services:
  # Base de datos PostgreSQL para producción
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-crm_db}
      - POSTGRES_USER=${POSTGRES_USER:-crm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-crm_password}
    ports:
      - "5432:5432"
    networks:
      - crm_network
    restart: unless-stopped

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - crm_network
    restart: unless-stopped

  # Aplicación Django para producción
  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn res_crm.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - DJANGO_SETTINGS_MODULE=res_crm.settings
      - DATABASE_URL=${DATABASE_URL:-postgresql://crm_user:crm_password@db:5432/crm_db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    depends_on:
      - db
      - redis
    networks:
      - crm_network
    restart: unless-stopped

  # Nginx para producción
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - crm_network
    restart: unless-stopped

  # Backup automático de base de datos
  backup:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-crm_db}
      - POSTGRES_USER=${POSTGRES_USER:-crm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-crm_password}
    command: >
      sh -c "pg_dump -h db -U crm_user -d crm_db > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql"
    networks:
      - crm_network
    profiles:
      - backup

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  crm_network:
    driver: bridge
